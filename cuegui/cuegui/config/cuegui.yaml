# Default CueGUI config file

# Configure how a version number should be acquired.
#  - False, use the version number in VERSION.in
#  - True, run the commands defined at cuegui.custom.cmd.version.beta (for beta) or cuegui.custom.cmd.version.stable (for stable) to acquire the version number
cuegui.use.custom.version: False
# Used to show the CueGUI beta version, if the environment variable OPENCUE_BETA = 1 (setenv OPENCUE_BETA 1)
# If the CueGUI beta version is enabled, it's possible to run a shell command to get the cuegui version or any other
# custom command specified in the environment configuration.
cuegui.custom.cmd.version.beta: "echo 1.0.0"
# Used to show the CueGUI stable version, if the environment variable OPENCUE_BETA = 0 (setenv OPENCUE_BETA 0)
cuegui.custom.cmd.version.stable: "echo 1.0.1"

logger.format: '%(levelname)-9s %(module)-10s %(message)s'
logger.level: 'WARNING'

# Path for static resources like images/icons.
paths.resources: './images'
# Path for various config files.
paths.config: './config'
# Path for the default application layout .ini file. If users do not have a layout stored
# in their local filesystem, the layout stored here will be copied. This value can also
# be set via the CUEGUI_DEFAULT_INI_PATH environment variable.
paths.default_ini_path: './config'
# Paths for CueGUI plugins.
paths.plugins: ['./plugins']

# How often the UI will refresh its contents. All values in milliseconds.
refresh.job_update_delay: 10000
refresh.layer_update_delay: 10000
refresh.frame_update_delay: 10000
refresh.host_update_delay: 20000
refresh.after_action_update_delay: 1000
refresh.min_update_interval: 5000

# Log roots used by various operating systems. Used for remapping paths so logs produced on
# one platform will be accessible locally.
render_logs.root:
  windows: 'S:'
  mac: '/Users/shots'
  darwin: '/Users/shots'
  linux: '/shots'
  rhel7: '/shots'
  rocky9: '/shots'
# Substrings which, when found in render logs, will cause that line to be highlighted.
render_logs.highlight.error: [
  'error', 'aborted', 'fatal', 'failed', 'killed', 'command not found',
  'no licenses could be found', 'killMessage']
render_logs.highlight.warning: ['warning', 'not found']
render_logs.highlight.info: ['info:', 'rqd cmd:']

# File should be stored in paths.config.
style.style_sheet: 'darkpalette.qss'
style.font.family: 'Luxi Sans'
style.font.size: 10
style.color_theme: 'plastique'
# RGB values.
style.colors.background: [
  [50, 50, 100],
  [100, 100, 50],
  [0, 50, 0],
  [50, 30, 0],
]
style.colors.frame_state:
  DEAD: [255, 0, 0]
  DEPEND: [160, 32, 240]
  EATEN: [150, 0, 0]
  RUNNING:  [200, 200, 55]
  SETUP: [160, 32, 240]
  SUCCEEDED: [55, 200, 55]
  WAITING: [135, 207, 235]
  CHECKPOINT: [61, 98, 247]

# Default editor to use for viewing log files.
editor.windows: 'notepad'
editor.mac: 'open -t'
editor.linux: 'gview -R -m -M -U {config_path}/gvimrc +'

# Url to the sentry application dsn
# comment out to disable sentry
# sentry.dsn: 'https://someid@your-sentry.com/10'

resources:
  # The max cores and max memory based on the available hardware.
  # These values are used by:
  #   - layer-properties
  #   - redirect plugin
  #   - service properties
  max_cores: 32
  max_memory: 128
  max_gpus: 8
  max_gpu_memory: 128
  # Redirect Plugin maximum allowed core-hour cutoff.
  # Users will not be able to search for procs with frames that have been
  # already used more than this many core-hours:
  max_proc_hour_cutoff: 30
  # Redirect plugin wasted cores threshold:
  # When redirecting, and the target show is at or very close to subscription
  # burst, killing frames will free up cores that may not be picked up by the
  # target job. The plugin will warn the user if the number of potentially lost
  # cores is higher that this threshold. To disable this warning, set the
  # threshold to -1.
  redirect_wasted_cores_threshold: 100

links.user_guide: 'https://www.opencue.io/docs/'
links.issue.create: 'https://github.com/AcademySoftwareFoundation/OpenCue/issues/new'
# Appended to `links.issue.create`.
links.issue.suggestion: '?labels=enhancement&template=enhancement.md'
# Appended to `links.issue.create`.
links.issue.bug: '?labels=bug&template=bug_report.md'

# List of tags to be used when viewing or editing tags.
allowed_tags: ['general', 'desktop', 'playblast', 'util', 'preprocess', 'wan', 'cuda', 'splathw',
               'naiad', 'massive']

email.subject_prefix: 'cuemail: please check '
email.body_prefix: 'Your Support Team requests that you check '
email.body_suffix: "\n\n"
email.domain: 'your.domain.com'
# A template for what email should be used for show support.
#  - {domain} is required and will be replaced by email.domain
#  - {show} is not required and will be replaced by the job show
#  - Multiple addresses might be provided in a comma-separated list
email.show_support_cc_template: "{show}-support@{domain}"

# Unix epoch timestamp. If the user last viewed the startup notice before this time, the
# notice will be shown.
startup_notice.date: 0
# Notice message.
startup_notice.msg: ''

# Memory usage above this level will be displayed in a different color.
memory_warning_level: 5242880

# Output Viewers config.
# Frame, Layer and Job objects have right click menu option for opening an output viewer
# (eg. OpenRV)
# output_viewers:
#  # Text to be displayed at the menu action button
#  - action_text: "View in OpenRV"
#    # extract_args_regex: Regex to extract arguments from the output path produced by a job/layer/frame
#    # cmd_pattern: Command pattern to be matched with the regex defined at extract_args_regex
#    # if extract_args_regex is not provided, cmd_pattern is called directly with paths as arguments
#    extract_args_regex: '/shots/(?P<show>\w+)/(?P<shot>shot\w+)/.*'
#    cmd_pattern: "env SHOW={show} SHOT={shot} COLOR_IO=/{show}/home/colorspaces.xml OCIO=/{show}/home/config.ocio openrv {paths}"
#
#    # if provided, paths containing any of the two values are considered the same output and only one
#    # of them will be passed to the viewer
#    stereo_modifiers: "_rt_,_lf_"

# Pattern to call viewer cmd directly without extracting environment variables. Used for previewing frames
# output_viewer_direct_cmd_call: "openrv {paths}"

# These flags determine whether or not layers/frames will be readonly when job is finished.
# If flags are set as true, layers/frames cannot be retried, eaten, edited dependency on, etc.
# In order to toggle the same protection on cuebot's side, set flags in opencue.properties
finished_jobs_readonly.frame: True
finished_jobs_readonly.layer: True

# A comma-separated list of action types that should be hidden on the FilterDialog widget.
# (See filter.proto/ActionType for a full list eg. SET_ALL_RENDER_LAYER_CORES,
# MOVE_JOB_TO_GROUP, SET_ALL_RENDER_LAYER_MAX_CORES)
# An empty string means all actions are active.
filter_dialog.disabled_action_types: ''

# Define whether or not new jobs should be appended to the current list of jobs on the JobMonitor widget
#  - True: search result will append jobs to the current list of monitored jobs
#  - False: repopulate the jobs table with the search result
search_jobs.append_results: True
