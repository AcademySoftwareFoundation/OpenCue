cue.proxy = tcp -h cuetest01-vm -p 9019 -t 10000:tcp -h cuetest02-vm -p 9019 -t 10000:tcp -h cuetest03-vm -p 9019 -t 10000
spring.velocity.checkTemplateLocation=false

# A domain to attach to usernames to send job completition emails
#  eg: job_user=jon -> email-to: jon@opencue.io
email.domain=opencue.io
# An email address to use as From for cuebot emails
email.from.address=opencue-noreply@opencue.io
# A comma-separated list of emails to be cc'ed on maintenance communications
email.cc.addresses=dev-team@opencue.io

grpc.cue_port=8453
grpc.rqd_server_port=${CUEBOT_GRPC_RQD_SERVER_PORT:50051}
grpc.max_message_bytes=104857600
# Number of entries allowed in the RQD channel cache
grpc.rqd_cache_size=500
# RQD Channel Cache Expiration in Minutes
grpc.rqd_cache_expiration=30
# RQD Channel Cache expected concurrency
grpc.rqd_cache_concurrency=20
# RQD Channel task deadline in seconds
grpc.rqd_task_deadline=10

# Set hostname/IP of the smtp host. Will be used for mailing
smtp_host=smtp

# Healthy Threadpool Executor
booking_queue.threadpool.health_threshold=10
booking_queue.threadpool.core_pool_size=10
booking_queue.threadpool.max_pool_size=14
booking_queue.threadpool.queue_capacity=2000
dispatch.threadpool.core_pool_size=6
dispatch.threadpool.max_pool_size=8
dispatch.threadpool.queue_capacity=2000
healthy_threadpool.health_threshold=6
healthy_threadpool.min_unhealthy_period_min=3
report_queue.threadPoolSizeInitial=6
report_queue.threadPoolSizeMax=12
# The queue size should be bigger then the expected amount of hosts
report_queue.queueSize=5000
kill_queue.threadPoolSizeInitial=2
kill_queue.threadPoolSizeMax=6
kill_queue.queueSize=1000

log.frame-log-root.default_os=/arbitraryLogDirectory
log.frame-log-root.some_os=/arbitrarySomeOsLogDirectory

dispatcher.job_query_max=20
dispatcher.job_lock_expire_seconds=2
dispatcher.job_lock_concurrency_level=3
dispatcher.frame_query_max=10
dispatcher.job_frame_dispatch_max=3
dispatcher.host_frame_dispatch_max=12

dispatcher.launch_queue.core_pool_size=1
dispatcher.launch_queue.max_pool_size=1
dispatcher.launch_queue.queue_capacity=100

dispatcher.dispatch_pool.core_pool_size=4
dispatcher.dispatch_pool.max_pool_size=4
dispatcher.dispatch_pool.queue_capacity=500

dispatcher.manage_pool.core_pool_size=8
dispatcher.manage_pool.max_pool_size=8
dispatcher.manage_pool.queue_capacity=250

dispatcher.report_queue.core_pool_size=6
dispatcher.report_queue.max_pool_size=8
dispatcher.report_queue.queue_capacity=1000

dispatcher.kill_queue.core_pool_size=6
dispatcher.kill_queue.max_pool_size=8
dispatcher.kill_queue.queue_capacity=1000

dispatcher.booking_queue.core_pool_size=6
dispatcher.booking_queue.max_pool_size=6
dispatcher.booking_queue.queue_capacity=1000
dispatcher.min_available_temp_storage_percentage=20
dispatcher.min_bookable_free_mcp_kb=1048576
dispatcher.oom_max_safe_used_physical_memory_threshold=0.9
dispatcher.oom_max_safe_used_swap_memory_threshold=0.2
dispatcher.oom_frame_overboard_allowed_threshold=0.6
dispatcher.frame_kill_retry_limit=3

# A comma separated list of services that should have their frames considered
# selfish. A selfish frame will reserve all the available cores to avoid
# having to share resources with other renders.
dispatcher.frame.selfish.services=arnold,selfish-service

dispatcher.memory.mem_reserved_default = 3355443
dispatcher.memory.mem_reserved_max = 52428800
dispatcher.memory.mem_reserved_min = 262144
dispatcher.memory.mem_reserved_system = 524288
dispatcher.memory.mem_gpu_reserved_default = 0
dispatcher.memory.mem_gpu_reserved_min = 0
dispatcher.memory.mem_gpu_reserved_max = 104857600