<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2018 Sony Pictures Imageworks Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
    
    <!--
    The way the unit tests work right now, any test that has this XML included will set up the entire context from scratch for the
    individual test. The TestDatabaseSetup works around this problem by creating only 1 database per process, no matter how many times the
    bean is created. The username and password will be the same for the entire process.
    
    Normally we'd have a destroy-method attrib here as well, but we take that out for 2 reasons:
    
    1. Destroying would happen at the end of each test method, which means our DB would get dropped after a single test
    2. Destroying doesn't even work properly in this version of the spring testing framework. The context never gets destroyed. There's an
       annotation in later versions called DirtyContext that you can apply on the class (not the method like in this version) and that lets
       you specify where you want the context destroyed.
       
    To work around this destroying problem, TestDatabaseSetup creates a shutdown hook that drop the database once the process ends.
    
    What about using a test suite? That idea didn't pan out because I wasn't able to get spring to intiailize the test suite class / inject
    information (db username/password/etc..) back in to the spring context for use by the individual test classes.
    -->
    <bean id="dataSourceSetup" class="com.imageworks.spcue.test.TestDatabaseSetup" init-method="create" />

    <bean id="cueDataSource" primary="true" class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="dataSourceSetup">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url">
            <util:property-path path="dataSourceSetup.url"/>
        </property>
        <property name="username">
            <util:property-path path="dataSourceSetup.username"/>
        </property>
        <property name="password">
            <util:property-path path="dataSourceSetup.password"/>
        </property>
    </bean>

</beans>

