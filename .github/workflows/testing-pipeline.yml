name: OpenCue Testing Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test_python_2023:
    name: Run Python Unit Tests (CY2023)
    runs-on: ubuntu-22.04
    container: aswf/ci-opencue:2023
    steps:
      - uses: actions/checkout@v4
      - name: Run Python Tests
        run: ci/run_python_tests.sh

  test_cuebot_2023:
    name: Build Cuebot and Run Unit Tests (CY2023)
    runs-on: ubuntu-22.04
    container:
      image: aswf/ci-opencue:2023
    steps:
      - uses: actions/checkout@v4
      - name: Build with Gradle
        run: |
          chown -R aswfuser:aswfgroup .
          su -c "cd cuebot && ./gradlew build --stacktrace --info" aswfuser

  test_python_2024:
    name: Run Python Unit Tests (CY2024)
    runs-on: ubuntu-22.04
    container: aswf/ci-opencue:2024
    steps:
      - uses: actions/checkout@v4
      - name: Run Python Tests
        run: ci/run_python_tests.sh

  test_cuebot_2024:
    name: Build Cuebot and Run Unit Tests (CY2024)
    runs-on: ubuntu-22.04
    container:
      image: aswf/ci-opencue:2024
    steps:
      - uses: actions/checkout@v4
      - name: Build with Gradle
        run: |
          chown -R aswfuser:aswfgroup .
          su -c "cd cuebot && ./gradlew build --stacktrace --info" aswfuser

  integration_test:
    name: Run Integration Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run test
        run: ci/run_integration_test.sh

      - name: Archive log files
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-logs
          path: /tmp/opencue-test/*.log

  lint_python:
    name: Lint Python Code
    runs-on: ubuntu-22.04
    container: aswf/ci-opencue:2024.1
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - uses: actions/checkout@v4
      - name: Lint Python Code
        run: ci/run_python_lint.sh

  test_sphinx:
    name: Test Documentation Build
    runs-on: ubuntu-22.04
    container:
      image: aswf/ci-opencue:2023
    steps:
      - uses: actions/checkout@v4
      - name: Run Sphinx build
        run: ci/build_sphinx_docs.sh

  check_changed_files:
    name: Check Changed Files
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for Version Change
        run: |
          readarray -t changed_files < <(git diff --name-only HEAD^1 HEAD)
          ci/check_changed_files.py "${changed_files[@]}"

  check_migration_files:
    name: Check Database Migration Files
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check Migration Files
        run: ci/check_database_migrations.py

  check_for_version_bump:
    name: Check for Version Bump
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for Version Change
        run: |
          readarray -t changed_files < <(git diff --name-only HEAD^1 HEAD)
          ci/check_version_bump.py "${changed_files[@]}"
