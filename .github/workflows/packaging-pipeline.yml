name: OpenCue Packaging Pipeline

# TODO This should only run on commits to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_cuebot:
    name: Build Cuebot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Build ID
        run: |
          ci/generate_version_number.sh > VERSION
          echo "::set-env name=BUILD_ID::$(cat ./VERSION)"
      #- uses: azure/docker-login@v1
      #  name: Docker Hub login
      #  with:
      #    username: ${{ secrets.DOCKER_USER }}
      #    password: ${{ secrets.DOCKER_PASS }}
      #- name: Build Cuebot Docker
      #  run: |
      #    set -e
      #    # build cuebot image for the build ID
      #    echo $BUILD_ID
      #    image_name="opencuebuild/cuebot:${BUILD_ID}"
      #    docker build -t ${image_name} -f cuebot/Dockerfile "."
      #    docker push ${image_name}
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          repository: opencuebuild/cuebot
          tags: ${{ env.BUILD_ID }}
      - name: Extract Cuebot Artifacts
        run: |
          set -e
          image_name="opencuebuild/cuebot:${BUILD_ID}"
          container_id=$(docker create ${image_name})
          artifacts="/opt/opencue/cuebot-${BUILD_ID}-all.jar /opt/opencue/opencue-cuebot-${BUILD_ID}-1.noarch.rpm"
          mkdir -p "${GITHUB_WORKSPACE}/artifacts/"
          for artifact in $artifacts; do
            docker cp ${container_id}:${artifact} "${GITHUB_WORKSPACE}/artifacts/"
          done
          docker rm $container_id
      - name: List Artifacts
        run: ls "${GITHUB_WORKSPACE}/artifacts/"
