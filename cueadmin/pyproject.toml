[build-system]
requires = [
    "hatchling"
]
build-backend = "hatchling.build"

[project]
name = "opencue_cueadmin"
dynamic = ["version"]
dependencies = [
    "opencue_pycue"
]
requires-python = ">3.7"
description = "CueAdmin is a command-line administration tool for OpenCue that provides full control over jobs, layers, frames, and hosts. It allows administrators to perform advanced management tasks such as setting priorities, killing jobs, or managing resource allocation."
readme = "README.md"
license = {text = "Apache-2.0"}

[tool.hatch.version]
source = "code"
path = "../ci/generate_version_number.py"
default-version = "0.0.0"

[tool.hatch.build.targets.wheel]
packages = ["cueadmin"]

[project.scripts]
cueadmin = "cueadmin.__main__:main"

# --- Pytest configuration ---
[tool.pytest.ini_options]
minversion = "8.0" # Set to required pytest version
testpaths = ["tests"] # Relative path(s) where tests are located
python_files = ["test_*.py", "*_tests.py"] # Default test file pattern
python_functions = ["test_*"] # Default test function pattern
addopts = [
    "-v",  # Verbose output
    "--strict-markers",  # Markers must be registered
    "--tb=short",  # Shorter traceback format
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

# --- Optional Test Dependencies ---
[project.optional-dependencies]
test = [
    "mock==2.0.0",
    "pyfakefs==5.2.3",
    "pytest",
    "pytest-cov",
    "pytest-mock",
]

dev = [
    "mock==2.0.0",
    "pyfakefs==5.2.3",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pylint",
    "black",
    "isort"
]

# --- Coverage configuration ---
[tool.coverage.run]
source = ["cueadmin"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# --- GitHub Actions Example ---
# To run tests in GitHub Actions, add this to .github/workflows/test.yml:
#
# - name: Run cueadmin tests
#   run: |
#     cd cueadmin
#     pip install -e ".[test]"
#     pytest --cov=cueadmin --cov-report=xml
#
# - name: Upload coverage to Codecov
#   uses: codecov/codecov-action@v3
#   with:
#     file: ./cueadmin/coverage.xml
#     flags: cueadmin
#     name: cueadmin-coverage
